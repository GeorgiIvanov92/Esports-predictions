// <auto-generated />
using System;
using LolData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoLData.Migrations
{
    [DbContext(typeof(TrackerDBContext))]
    partial class TrackerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EsportStats.Models.ChampionStat", b =>
                {
                    b.Property<int>("ChampionStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChampionStatId"), 1L, 1);

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<double>("KDA")
                        .HasColumnType("float");

                    b.Property<int?>("PlayerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double>("WinratePercent")
                        .HasColumnType("float");

                    b.HasKey("ChampionStatId");

                    b.HasIndex("PlayerId");

                    b.ToTable("ChampionStat");
                });

            modelBuilder.Entity("EsportStats.Models.Player", b =>
                {
                    b.Property<int?>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PlayerId"), 1L, 1);

                    b.Property<float>("AheadInCSAt15Percent")
                        .HasColumnType("real");

                    b.Property<float>("CSDifferenceAt15")
                        .HasColumnType("real");

                    b.Property<float>("CSPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("DamagePerMinute")
                        .HasColumnType("real");

                    b.Property<float>("DamagePercent")
                        .HasColumnType("real");

                    b.Property<float>("FirstBloodParticipationPercent")
                        .HasColumnType("real");

                    b.Property<float>("FirstBloodVictimPercent")
                        .HasColumnType("real");

                    b.Property<float>("GoldDifferenceAt15")
                        .HasColumnType("real");

                    b.Property<float>("GoldPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("GoldPercent")
                        .HasColumnType("real");

                    b.Property<float>("KDA")
                        .HasColumnType("real");

                    b.Property<float>("KillParticipation")
                        .HasColumnType("real");

                    b.Property<float>("KillsAndAssistsPerMinute")
                        .HasColumnType("real");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pentakills")
                        .HasColumnType("int");

                    b.Property<int>("SoloKills")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<float>("VisionScorePerMinute")
                        .HasColumnType("real");

                    b.Property<float>("VisionWardsPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("WardPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("WardsClearedPerMinute")
                        .HasColumnType("real");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.Property<float>("XPDifferenceAt15")
                        .HasColumnType("real");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("EsportStats.Models.Prelive", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BestOf")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Prelive");
                });

            modelBuilder.Entity("EsportStats.Models.Results", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<int?>("AwayScore")
                        .HasColumnType("int");

                    b.Property<string>("AwayTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GameDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GamePart")
                        .HasColumnType("int");

                    b.Property<int?>("HomeScore")
                        .HasColumnType("int");

                    b.Property<string>("HomeTeam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("EsportStats.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("AverageGameTime")
                        .HasColumnType("real");

                    b.Property<int>("BlueSideLosses")
                        .HasColumnType("int");

                    b.Property<int>("BlueSideWins")
                        .HasColumnType("int");

                    b.Property<float>("CSDifferenceAt15")
                        .HasColumnType("real");

                    b.Property<float>("CSPerMinute")
                        .HasColumnType("real");

                    b.Property<int>("ChemtechDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("ChemtechDrakesLost")
                        .HasColumnType("int");

                    b.Property<int>("CloudDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("CloudDrakesLost")
                        .HasColumnType("int");

                    b.Property<int>("DamagePerMinute")
                        .HasColumnType("int");

                    b.Property<float>("DeathsPerGame")
                        .HasColumnType("real");

                    b.Property<float>("DragonsAt15")
                        .HasColumnType("real");

                    b.Property<float>("DragonsPerGame")
                        .HasColumnType("real");

                    b.Property<int>("ElderDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("ElderDrakesLost")
                        .HasColumnType("int");

                    b.Property<int>("FirstBloodPercent")
                        .HasColumnType("int");

                    b.Property<int>("FirstTowerPercent")
                        .HasColumnType("int");

                    b.Property<int>("GoldDifferenceAt15")
                        .HasColumnType("int");

                    b.Property<int>("GoldDifferencePerMinute")
                        .HasColumnType("int");

                    b.Property<int>("GoldPerMinute")
                        .HasColumnType("int");

                    b.Property<float>("HeraldPerGame")
                        .HasColumnType("real");

                    b.Property<int>("HextechDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("HextechDrakesLost")
                        .HasColumnType("int");

                    b.Property<int>("InfernalDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("InfernalDrakesLost")
                        .HasColumnType("int");

                    b.Property<float>("KDRatio")
                        .HasColumnType("real");

                    b.Property<float>("KillsPerGame")
                        .HasColumnType("real");

                    b.Property<int>("MountainDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("MountainDrakesLost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NashorsPerGame")
                        .HasColumnType("real");

                    b.Property<int>("OceanDrakesKilled")
                        .HasColumnType("int");

                    b.Property<int>("OceanDrakesLost")
                        .HasColumnType("int");

                    b.Property<int>("RedSideLosses")
                        .HasColumnType("int");

                    b.Property<int>("RedSideWins")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.Property<float>("TowerDifferenceAt15")
                        .HasColumnType("real");

                    b.Property<float>("VisionWardsPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("WardsClearedPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("WardsClearedPercent")
                        .HasColumnType("real");

                    b.Property<float>("WardsPerMinute")
                        .HasColumnType("real");

                    b.Property<float>("Winrate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("EsportStats.Models.ChampionStat", b =>
                {
                    b.HasOne("EsportStats.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("EsportStats.Models.Player", b =>
                {
                    b.HasOne("EsportStats.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
